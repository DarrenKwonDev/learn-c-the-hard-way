!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/server01/learn-c-the-hard-way/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
Address	ex17.c	/^struct Address {$/;"	s	file:
Address_print	ex17.c	/^void Address_print(struct Address* addr)$/;"	f	typeref:typename:void
BLACK_EYES	ex24.c	/^  BLUE_EYES, GREEN_EYES, BROWN_EYES, BLACK_EYES, OTHER_EYES$/;"	e	enum:EyeColor	file:
BLUE_EYES	ex24.c	/^  BLUE_EYES, GREEN_EYES, BROWN_EYES, BLACK_EYES, OTHER_EYES$/;"	e	enum:EyeColor	file:
BROWN_EYES	ex24.c	/^  BLUE_EYES, GREEN_EYES, BROWN_EYES, BLACK_EYES, OTHER_EYES$/;"	e	enum:EyeColor	file:
CFLAGS	Makefile	/^CFLAGS=-Wall -g$/;"	m
Connection	ex17.c	/^struct Connection {$/;"	s	file:
Database	ex17.c	/^struct Database {$/;"	s	file:
Database_close	ex17.c	/^void Database_close(struct Connection* conn)$/;"	f	typeref:typename:void
Database_create	ex17.c	/^void Database_create(struct Connection* conn)$/;"	f	typeref:typename:void
Database_delete	ex17.c	/^void Database_delete(struct Connection* conn, int id)$/;"	f	typeref:typename:void
Database_get	ex17.c	/^void Database_get(struct Connection* conn, int id)$/;"	f	typeref:typename:void
Database_list	ex17.c	/^void Database_list(struct Connection* conn) $/;"	f	typeref:typename:void
Database_load	ex17.c	/^void Database_load(struct Connection* conn)$/;"	f	typeref:typename:void
Database_open	ex17.c	/^struct Connection* Database_open(const char* filename, char mode) {$/;"	f	typeref:struct:Connection *
Database_set	ex17.c	/^void Database_set(struct Connection* conn, int id, const char *name, const char* email) {$/;"	f	typeref:typename:void
Database_write	ex17.c	/^void Database_write(struct Connection* conn)$/;"	f	typeref:typename:void
EYE_COLOR_NAMES	ex24.c	/^const char *EYE_COLOR_NAMES[] = {$/;"	v	typeref:typename:const char * []
EyeColor	ex24.c	/^typedef enum EyeColor {$/;"	g	file:
EyeColor	ex24.c	/^} EyeColor;$/;"	t	typeref:enum:EyeColor	file:
GREEN_EYES	ex24.c	/^  BLUE_EYES, GREEN_EYES, BROWN_EYES, BLACK_EYES, OTHER_EYES$/;"	e	enum:EyeColor	file:
MAX_DATA	ex17.c	/^#define MAX_DATA /;"	d	file:
MAX_DATA	ex24.c	/^#define MAX_DATA /;"	d	file:
MAX_DATA	ex25.c	/^#define MAX_DATA /;"	d	file:
MAX_ROWS	ex17.c	/^#define MAX_ROWS /;"	d	file:
MY_NAME	ex22_main.c	/^const char* MY_NAME = "Zed A. Shaw";$/;"	v	typeref:typename:const char *
OTHER_EYES	ex24.c	/^  BLUE_EYES, GREEN_EYES, BROWN_EYES, BLACK_EYES, OTHER_EYES$/;"	e	enum:EyeColor	file:
Person	ex16.c	/^struct Person {$/;"	s	file:
Person	ex24.c	/^typedef struct Person {$/;"	s	file:
Person	ex24.c	/^} Person;$/;"	t	typeref:struct:Person	file:
Person_create	ex16.c	/^struct Person* Person_create(char *name, int age, int height, int weight) {$/;"	f	typeref:struct:Person *
Person_destroy	ex16.c	/^void Person_destroy(struct Person *who) {$/;"	f	typeref:typename:void
Person_print	ex16.c	/^void Person_print(struct Person* who)$/;"	f	typeref:typename:void
THE_AGE	ex22.c	/^static int THE_AGE = 37;$/;"	v	typeref:typename:int	file:
THE_SIZE	ex22.c	/^int THE_SIZE = 1000;$/;"	v	typeref:typename:int
__dbg_h__	dbg.h	/^#define __dbg_h__$/;"	d
_ex22_h	ex22.h	/^#define _ex22_h$/;"	d
age	ex16.c	/^  int age;$/;"	m	struct:Person	typeref:typename:int	file:
age	ex24.c	/^  int age;$/;"	m	struct:Person	typeref:typename:int	file:
all	Makefile	/^all:$/;"	t
bubble_sort	ex18.c	/^int* bubble_sort(int* numbers, int count, compare_cb cmp)$/;"	f	typeref:typename:int *
bubble_sort	ex20.c	/^int* bubble_sort(int* numbers, int count, compare_cb cmp)$/;"	f	typeref:typename:int *
check	dbg.h	/^#define check(/;"	d
check_debug	dbg.h	/^#define check_debug(/;"	d
check_mem	dbg.h	/^#define check_mem(/;"	d
clean	Makefile	/^clean:$/;"	t
clean_errno	dbg.h	/^#define clean_errno(/;"	d
compare_cb	ex18.c	/^typedef int (*compare_cb)(int a, int b);$/;"	t	typeref:typename:int (*)(int a,int b)	file:
compare_cb	ex20.c	/^typedef int (*compare_cb)(int a, int b);$/;"	t	typeref:typename:int (*)(int a,int b)	file:
crash	ex3_crash.c	/^void crash() {$/;"	f	typeref:typename:void
db	ex17.c	/^  struct Database *db;$/;"	m	struct:Connection	typeref:struct:Database *	file:
debug	dbg.h	/^  #define debug(/;"	d
destory	ex20.c	/^void destory(compare_cb cmp)$/;"	f	typeref:typename:void
die	ex17.c	/^void die(const char* message) {$/;"	f	typeref:typename:void
die	ex18.c	/^void die(const char* message) {$/;"	f	typeref:typename:void
die	ex20.c	/^void die(const char* message) {$/;"	f	typeref:typename:void
duffs_device	ex23.c	/^int duffs_device(char *from, char *to, int count) {$/;"	f	typeref:typename:int
dump	ex20.c	/^void dump(compare_cb cmp)$/;"	f	typeref:typename:void
email	ex17.c	/^  char email[MAX_DATA];$/;"	m	struct:Address	typeref:typename:char[]	file:
eyes	ex24.c	/^  EyeColor eyes;$/;"	m	struct:Person	typeref:typename:EyeColor	file:
file	ex17.c	/^  FILE* file;$/;"	m	struct:Connection	typeref:typename:FILE *	file:
first_name	ex24.c	/^  char first_name[MAX_DATA];$/;"	m	struct:Person	typeref:typename:char[]	file:
get_age	ex22.c	/^int get_age() {$/;"	f	typeref:typename:int
height	ex16.c	/^  int height;$/;"	m	struct:Person	typeref:typename:int	file:
id	ex17.c	/^  int id;$/;"	m	struct:Address	typeref:typename:int	file:
income	ex24.c	/^  float income;$/;"	m	struct:Person	typeref:typename:float	file:
last_name	ex24.c	/^  char last_name[MAX_DATA];$/;"	m	struct:Person	typeref:typename:char[]	file:
log_err	dbg.h	/^#define log_err(/;"	d
log_info	dbg.h	/^#define log_info(/;"	d
log_warn	dbg.h	/^#define log_warn(/;"	d
main	ex1.c	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main	ex10.c	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	ex11.c	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	ex12.c	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	ex13.c	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	ex14.c	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	ex15.c	/^int main(int argc, char* argv[]) $/;"	f	typeref:typename:int
main	ex16.c	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	ex17.c	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	ex18.c	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	ex19.c	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	ex20.c	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	ex22_main.c	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	ex23.c	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	ex24.c	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	ex25.c	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	ex3.c	/^int main() $/;"	f	typeref:typename:int
main	ex3_crash.c	/^int main() {$/;"	f	typeref:typename:int
main	ex7.c	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main	ex8.c	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	ex9.c	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
name	ex16.c	/^  char* name;$/;"	m	struct:Person	typeref:typename:char *	file:
name	ex17.c	/^  char name[MAX_DATA];$/;"	m	struct:Address	typeref:typename:char[]	file:
normal_copy	ex23.c	/^int normal_copy(char *from, char *to, int count) {$/;"	f	typeref:typename:int
print_arguments	ex14.c	/^void print_arguments(int argc, char* argv[]) {$/;"	f	typeref:typename:void
print_letters	ex14.c	/^void print_letters(char arg[]) {$/;"	f	typeref:typename:void
print_size	ex22.c	/^void print_size() {$/;"	f	typeref:typename:void
print_vowel	ex10.c	/^void print_vowel(char* pWord) {$/;"	f	typeref:typename:void
read_int	ex25.c	/^int read_int(int *out_int)$/;"	f	typeref:typename:int
read_scan	ex25.c	/^int read_scan(const char *fmt, ...)$/;"	f	typeref:typename:int
read_string	ex25.c	/^int read_string(char **out_string, int max_buffer)$/;"	f	typeref:typename:int
reverse_order	ex18.c	/^int reverse_order(int a, int b) { return b - a; } \/\/ 내림차순$/;"	f	typeref:typename:int
reverse_order	ex20.c	/^int reverse_order(int a, int b) { return b - a; } \/\/ 내림차순$/;"	f	typeref:typename:int
rows	ex17.c	/^  struct Address rows[MAX_ROWS];$/;"	m	struct:Database	typeref:struct:Address[]	file:
scope_demo	ex22_main.c	/^void scope_demo(int count) {$/;"	f	typeref:typename:void
sentinel	dbg.h	/^#define sentinel(/;"	d
set	ex17.c	/^  int set;$/;"	m	struct:Address	typeref:typename:int	file:
set_age	ex22.c	/^void set_age(int age) {$/;"	f	typeref:typename:void
sorted_order	ex18.c	/^int sorted_order(int a, int b) { return a - b; } \/\/ 오름차순$/;"	f	typeref:typename:int
sorted_order	ex20.c	/^int sorted_order(int a, int b) { return a - b; } \/\/ 오름차순$/;"	f	typeref:typename:int
strange_order	ex18.c	/^int strange_order(int a, int b) {$/;"	f	typeref:typename:int
strange_order	ex20.c	/^int strange_order(int a, int b) {$/;"	f	typeref:typename:int
test_check	ex19.c	/^int test_check(char* file_name) {$/;"	f	typeref:typename:int
test_check_debug	ex19.c	/^int test_check_debug() {$/;"	f	typeref:typename:int
test_check_mem	ex19.c	/^int test_check_mem() {$/;"	f	typeref:typename:int
test_debug	ex19.c	/^void test_debug() {$/;"	f	typeref:typename:void
test_log_err	ex19.c	/^void test_log_err() {$/;"	f	typeref:typename:void
test_log_info	ex19.c	/^void test_log_info() {$/;"	f	typeref:typename:void
test_log_warn	ex19.c	/^void test_log_warn() {$/;"	f	typeref:typename:void
test_sentinel	ex19.c	/^int test_sentinel(int code) {$/;"	f	typeref:typename:int
test_sorting	ex18.c	/^void test_sorting(int* numbers, int count, compare_cb cmp) {$/;"	f	typeref:typename:void
test_sorting	ex20.c	/^void test_sorting(int* numbers, int count, compare_cb cmp) {$/;"	f	typeref:typename:void
update_ratio	ex22.c	/^double update_ratio(double new_ratio) {$/;"	f	typeref:typename:double
valid_copy	ex23.c	/^int valid_copy(char *data, int count, char expects) {$/;"	f	typeref:typename:int
weight	ex16.c	/^  int weight;$/;"	m	struct:Person	typeref:typename:int	file:
zeds_device	ex23.c	/^int zeds_device(char *from, char *to, int count) {$/;"	f	typeref:typename:int
